 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.dbUser | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          resources:
            requests:
              memory: {{ .Values.postgres.resources.requests.memory | quote }}
              cpu: {{ .Values.postgres.resources.requests.cpu | quote }}
            limits:
              memory: {{ .Values.postgres.resources.limits.memory | quote }}
              cpu: {{ .Values.postgres.resources.limits.cpu | quote }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete # Delete PVCs when the StatefulSet is deleted
  volumeClaimTemplates:
    - metadata:
        name: pgdata
        annotations:
          "helm.sh/resource-policy": ""
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.postgres.storage }}

